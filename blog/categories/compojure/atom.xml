<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: compojure | Stumbling in the Dark]]></title>
  <link href="http://zetafish.github.com/blog/categories/compojure/atom.xml" rel="self"/>
  <link href="http://zetafish.github.com/"/>
  <updated>2011-11-26T22:45:18+01:00</updated>
  <id>http://zetafish.github.com/</id>
  <author>
    <name><![CDATA[Zetafish (Endymion Kasanardjo)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Web frameworks for clojure]]></title>
    <link href="http://zetafish.github.com/blog/2011/11/23/web-frameworks-for-clojure/"/>
    <updated>2011-11-23T23:37:00+01:00</updated>
    <id>http://zetafish.github.com/blog/2011/11/23/web-frameworks-for-clojure</id>
    <content type="html"><![CDATA[<p>Clojure has a number of frameworks for building web applications.</p>

<ul>
<li><a href="http://github.com/mmcgrana/ring/wiki">Ring</a> - De facto standard base
for writing web applications in Clojure.</li>
<li><a href="http://compojure.org/">Compojure</a> - small web framework with a
concise DSL to generate Ring handler functions.</li>
<li><a href="https://github.com/cgrand/moustache">Moustache</a> - micro web
framework with DSL to wire Ring handlers and middlewares</li>
<li><a href="http://www.webnoir.org/">Noir</a> - another micro web framework to
write Ring handlers and middlewares</li>
</ul>


<h2>Ring</h2>

<p>Hello world in Ring
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="nf">ns</span> <span class="nv">hello-world</span><span class="o">.</span><span class="nv">core</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">use</span> <span class="nv">ring</span><span class="o">.</span><span class="nv">adapter</span><span class="o">.</span><span class="nv">jetty</span><span class="p">))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="k">defn </span><span class="nv">handler</span> <span class="p">[</span><span class="nv">request</span><span class="p">]</span>
</span><span class='line'>  <span class="p">{</span><span class="nv">:status</span> <span class="mi">200</span>
</span><span class='line'>   <span class="nv">:headers</span> <span class="p">{</span><span class="s">&quot;Content-Type&quot;</span> <span class="s">&quot;text/html&quot;</span><span class="p">}</span>
</span><span class='line'>   <span class="nv">:body</span> <span class="s">&quot;Hello World&quot;</span><span class="p">})</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nf">run-jetty</span> <span class="nv">handler</span> <span class="p">{</span><span class="nv">:port</span> <span class="mi">8080</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Compojure</h2>

<p>Hello world in Compojure
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="nf">ns</span> <span class="nv">hello-world</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">:use</span> <span class="nv">compojure</span><span class="o">.</span><span class="nv">core,</span> <span class="nv">ring</span><span class="o">.</span><span class="nv">adapter</span><span class="o">.</span><span class="nv">jetty</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">:require</span> <span class="p">[</span><span class="nv">compojure</span><span class="o">.</span><span class="nv">route</span> <span class="nv">:as</span> <span class="nv">route</span><span class="p">]))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nf">defroutes</span> <span class="nv">main-routes</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">GET</span> <span class="s">&quot;/&quot;</span> <span class="p">[]</span> <span class="s">&quot;&lt;h1&gt;Hello World&lt;/h1&gt;&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">route/not-found</span> <span class="s">&quot;&lt;h1&gt;Page not found&lt;/h1&gt;&quot;</span><span class="p">))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nf">run-jetty</span> <span class="nv">main-routes</span> <span class="p">{</span><span class="nv">:port</span> <span class="mi">8080</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Noir</h2>

<p>Hello world in Noir
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="nf">ns</span> <span class="nv">my-app</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">:use</span> <span class="nv">noir</span><span class="o">.</span><span class="nv">core</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">:require</span> <span class="p">[</span><span class="nv">noir</span><span class="o">.</span><span class="nv">server</span> <span class="nv">:as</span> <span class="nv">server</span><span class="p">]))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nf">defpage</span> <span class="s">&quot;/welcome&quot;</span> <span class="p">[]</span>
</span><span class='line'>  <span class="s">&quot;Hello world&quot;</span><span class="p">)</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nf">server/start</span> <span class="mi">8080</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
